{"version":3,"sources":["services/EmployeeService.js","components/ListEmployeeComponent.jsx","components/HeaderComponent.jsx","components/FooterComponent.jsx","components/CreateEmployeeComponent.jsx","components/ViewEmployeeComponent.jsx","components/UpdateEmployeeComponent.jsx","components/HomeComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["EMPLOYEE_API_BASE_URL","axios","get","employee","post","employeeId","put","delete","ListEmployeeComponent","props","state","employees","addEmployee","bind","editEmployee","deleteEmployee","backToHome","EmployeeService","GetEmployees","then","res","setState","data","this","history","push","id","filter","className","onClick","style","marginLeft","marginTop","map","firstName","lastName","emailId","viewEmployee","Component","HeaderComponent","href","FooterComponent","CreateEmployeeComponent","saveOrUpdateEmployee","e","preventDefault","console","log","JSON","stringify","createEmployee","updateEmployee","changeFirstNameHandler","target","value","changelastNameHandler","changeEmailHandler","match","params","getEmployeeById","getTitle","placeholder","name","onChange","cancel","ViewEmployeeComponent","employeeList","HomeComponent","viewEmployeeList","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bb53dbb.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst EMPLOYEE_API_BASE_URL = \"/api/v1/employees\"\n\nclass EmployeeService {\n\n    GetEmployees() {\n        return axios.get(EMPLOYEE_API_BASE_URL);\n    }\n\n    createEmployee(employee){\n        return axios.post(EMPLOYEE_API_BASE_URL, employee);\n    }\n\n    getEmployeeById(employeeId){\n        return axios.get(EMPLOYEE_API_BASE_URL + '/'+ employeeId);\n    }\n\n     updateEmployee(employee,employeeId){\n        return axios.put(EMPLOYEE_API_BASE_URL + '/' + employeeId, employee );\n    }\n\n    deleteEmployee(employeeId){\n     return axios.delete(EMPLOYEE_API_BASE_URL + '/'+ employeeId);\n    }\n}\nexport default new EmployeeService();","import React, { Component } from \"react\";\nimport EmployeeService from \"../services/EmployeeService\";\n\nclass ListEmployeeComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      employees: []\n    }\n    this.addEmployee = this.addEmployee.bind(this);\n    this.editEmployee = this.editEmployee.bind(this);\n    this.deleteEmployee = this.deleteEmployee.bind(this);\n    this.backToHome = this.backToHome.bind(this);\n\n  }\n  componentDidMount() {\n    EmployeeService.GetEmployees().then((res) => {\n      this.setState({ employees: res.data });\n    });\n  }\n\n  addEmployee(){\n    this.props.history.push('/add-employee/_add');\n  }\n  editEmployee(id){\n    this.props.history.push(`/add-employee/${id}`);\n\n  }\n\n   deleteEmployee(id) {\n    EmployeeService.deleteEmployee(id).then(res => {\n      this.setState({employees: this.state.employees.filter(employee => employee.id!==id)});\n\n    });\n   }\n\n   viewEmployee(id){\n     this.props.history.push(`/view-employee/${id}`)\n   }\n   backToHome(){\n     this.props.history.push(\"/\");\n   }\n  render() {\n    return (\n      <div>\n        <h2 className=\"text-center\">Employee List</h2>\n\n        <div className=\"row\">\n          <button className=\"btn btn-primary\" onClick={this.addEmployee}>Add Employee</button>\n          <button style= {{marginLeft: \"20px\"}} className=\"btn btn-info\" onClick={this.backToHome}>Back To Home</button>\n\n        </div>\n        <div style={{marginTop:'15px'}} className=\"row\">\n          <table className=\"table table-striped table-bordered\">\n            <thead>\n              <tr>\n                <th>Employee First Name</th>\n                <th>Employee Last Name</th>\n                <th>Employee Email Id</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.employees.map((employee) => (\n                <tr key={employee.id}>\n                  <td>{employee.firstName}</td>\n                  <td>{employee.lastName}</td>\n                  <td>{employee.emailId}</td>\n                  <td> \n                    <button onClick= { () => this.editEmployee(employee.id)} className=\"btn btn-info\">Update</button>\n                    <button style= {{marginLeft: \"10px\"}} onClick= {() => this.deleteEmployee(employee.id)}className=\"btn btn-danger\">Delete</button>\n                    <button style= {{marginLeft: \"10px\"}} onClick= {() => this.viewEmployee(employee.id)}className=\"btn btn-info\">View</button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ListEmployeeComponent;\n","import React, { Component } from \"react\";\n\nclass HeaderComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    \n  }\n\n  \n  render() {\n    return (\n      <div>\n        <header>\n          <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n            <div>\n              <a href=\"https://javaguides.net\" className=\"navbar-brand\">\n                Employee Management App{\" \"}\n              </a>\n            </div>\n            \n          </nav>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default HeaderComponent;\n","import React, { Component } from \"react\";\n\nexport default class FooterComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div>\n        <footer className=\"footer\">\n          <span className=\"text-muted\">\n            {\" \"}\n            All Right Reserved 2020 @ Basnet and Co.\n          </span>\n        </footer>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport EmployeeService from '../services/EmployeeService';\n\nexport default class CreateEmployeeComponent extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            //step 2\n            id: this.props.match.params.id,\n            firstName: '',\n            lastName: '',\n            emailId: ''\n\n        }\n        this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\n        this.changelastNameHandler = this.changelastNameHandler.bind(this);\n        this.changeEmailHandler = this.changeEmailHandler.bind(this);\n        this.saveOrUpdateEmployee = this.saveOrUpdateEmployee.bind(this)\n\n    }\n// step 3\n    componentDidMount(){\n\n        //step4 \n        if(this.state.id ==='_add'){\n            return\n        }\n        else {\n            EmployeeService.getEmployeeById(this.state.id).then((res) => {\n                let employee = res.data;\n                this.setState({\n                    firstName: employee.firstName,\n                    lastName:employee.lastName,\n                    emailId: employee.emailId\n                })\n            });\n\n        }\n        \n    }\n\n\n    saveOrUpdateEmployee = (e) => { \n        e.preventDefault(); \n        let employee = {firstName: this.state.firstName, lastName: this.state.lastName,emailId: this.state.emailId};\n        console.log('employee =>' + JSON.stringify(employee));\n\n        //step 5\n        if(this.state.id ==='_add'){\n            EmployeeService.createEmployee(employee).then(res => {\n                this.props.history.push('/employees');\n    \n            });\n        }else{\n            EmployeeService.updateEmployee(employee, this.state.id).then(res => {\n                this.props.history.push('/employees'); \n             });\n\n        }\n    \n        \n    }\n\n    cancel(){\n        this.props.history.push('/employees');\n    }\n\n    changeFirstNameHandler = (e) => {\n        this.setState({firstName: e.target.value})\n    }\n\n    changelastNameHandler = (e) => {\n        this.setState({lastName: e.target.value})\n    }\n\n    changeEmailHandler = (e) => {\n        this.setState({emailId: e.target.value})\n    }\n\n    getTitle(){\n        if(this.state.id ==='_add'){\n            return <h3 className=\"text-center\">Add Employee</h3>\n        }\n        else {\n            return <h3 className=\"text-center\">Update Employee</h3>\n        }\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n                            {\n                                this.getTitle()\n                            }\n                            <div className=\"card-body\">\n                                <form>\n                                    <div className=\"form-group\">\n                                        <label>First Name:</label>\n                                        <input placeholder =\"First Name\" name=\"firstName\" className=\"form-control\" \n                                          value={this.state.firstName} onChange={this.changeFirstNameHandler} />\n\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Last Name:</label>\n                                        <input placeholder =\"Last Name\" name=\"lasttName\" className=\"form-control\" \n                                          value={this.state.lastName} onChange={this.changelastNameHandler} />\n\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label>Email Id:</label>\n                                        <input placeholder =\"Email Address\" name=\"emailId\" className=\"form-control\" \n                                          value={this.state.emailId} onChange={this.changeEmailHandler} />\n\n                                    </div>\n\n                                    <button className=\"btn btn-success\" onClick={this.saveOrUpdateEmployee}>Save</button>\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft:\"10px\"}}>Cancel</button>\n\n                                </form>\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                </div>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport EmployeeService from '../services/EmployeeService';\n\nclass ViewEmployeeComponent extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            id: this.props.match.params.id,\n            employee: {}\n\n        }\n        this.employeeList = this.employeeList.bind(this);\n    \n    }\n    componentDidMount(){\n        EmployeeService.getEmployeeById(this.state.id).then(res => {\n            this.setState({employee:res.data});\n    })\n    }\n\n    employeeList(){\n        this.props.history.push(\"/employees\");\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"card col-md-6 offset-md-3\">\n                    <h3 className=\"text-center\">View Employee Details</h3>\n                    <div className=\"card-body\">\n                        <div className=\"row\">\n                            <label>Employee First Name:</label>\n                            <div> { this.state.employee.firstName}</div>\n                        </div>\n                        <div className=\"row\">\n                            <label>Employee Last Name:</label>\n                            <div> { this.state.employee.lastName}</div>\n                        </div>\n                        <div className=\"row\">\n                            <label>Employee EmailId:</label>\n                            <div> { this.state.employee.emailId}</div>\n                        </div>\n                        <div className=\"row\">\n                        <button className=\"btn btn-primary\" onClick={this.employeeList}>Back To List</button>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ViewEmployeeComponent;\n","import React, { Component } from 'react'\nimport EmployeeService from '../services/EmployeeService';\n\nexport default class UpdateEmployeeComponent extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            id: this.props.match.params.id,\n            firstName: '',\n            lastName: '',\n            emailId: ''\n\n        }\n        this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\n        this.changelastNameHandler = this.changelastNameHandler.bind(this);\n        this.changeEmailHandler = this.changeEmailHandler.bind(this);\n        this.updateEmployee = this.updateEmployee.bind(this);\n    }\n\n    componentDidMount(){\n        EmployeeService.getEmployeeById(this.state.id).then((res) => {\n            let employee = res.data;\n            this.setState({\n                firstName: employee.firstName,\n                lastName:employee.lastName,\n                emailId: employee.emailId\n            })\n        });\n    }\n    updateEmployee = (e) => {\n        e.preventDefault(); \n        let employee = {firstName: this.state.firstName, lastName: this.state.lastName,emailId: this.state.emailId};\n        console.log('employee =>' + JSON.stringify(employee));\n\n         EmployeeService.updateEmployee(employee, this.state.id).then(res => {\n            this.props.history.push('/employees'); \n         });\n\n        \n        \n    }\n\n    cancel(){\n        this.props.history.push('/employees');\n    }\n\n    changeFirstNameHandler = (e) => {\n        this.setState({firstName: e.target.value})\n    }\n\n    changelastNameHandler = (e) => {\n        this.setState({lastName: e.target.value})\n    }\n\n    changeEmailHandler = (e) => {\n        this.setState({emailId: e.target.value})\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n                            <h3 className=\"text-center\">Update Employee</h3>\n                            <div className=\"card-body\">\n                                <form>\n                                    <div className=\"form-group\">\n                                        <label>First Name:</label>\n                                        <input placeholder =\"First Name\" name=\"firstName\" className=\"form-control\" \n                                          value={this.state.firstName} onChange={this.changeFirstNameHandler} />\n\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Last Name:</label>\n                                        <input placeholder =\"Last Name\" name=\"lasttName\" className=\"form-control\" \n                                          value={this.state.lastName} onChange={this.changelastNameHandler} />\n\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label>Email Id:</label>\n                                        <input placeholder =\"Email Address\" name=\"emailId\" className=\"form-control\" \n                                          value={this.state.emailId} onChange={this.changeEmailHandler} />\n\n                                    </div>\n\n                                    <button className=\"btn btn-success\" onClick={this.updateEmployee}>Update</button>\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft:\"10px\"}}>Cancel</button>\n\n                                </form>\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                </div>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class HomeComponent extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            \n        }\n    \n        this.viewEmployeeList = this.viewEmployeeList.bind(this)\n    }\n    viewEmployeeList(){\n        this.props.history.push('/employees'); \n      }\n    render() {\n        return (\n           <div>\n                <button style= {{marginTop: \"20px\"}} className=\"btn btn-primary\"  onClick={this.viewEmployeeList}>View Employee List</button>\n                   \n           </div> \n        \n        )\n    }\n}\n","//import logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport ListEmployeeComponent from './components/ListEmployeeComponent'\nimport HeaderComponent from './components/HeaderComponent';\nimport FooterComponent from './components/FooterComponent';\nimport CreateEmployeeComponent from './components/CreateEmployeeComponent';\n import UpdateEmployeeComponent from './components/UpdateEmployeeComponent';\nimport ViewEmployeeComponent from './components/ViewEmployeeComponent';\nimport 'react-app-polyfill/stable';\nimport HomeComponent from './components/HomeComponent';\n\nfunction App() {\n  return ( \n  <div >\n      <Router >\n\n        <HeaderComponent />\n          <div className = \"container\" >\n            <Switch >\n                <Route path = \"/\" exact component = {HomeComponent}></Route> \n                 <Route path = \"/employees\"component = {ListEmployeeComponent}></Route> \n\n                 {/*   step  1 */}\n                <Route path= \"/add-employee/:id\" component= {CreateEmployeeComponent}></Route>\n                 <Route path=\"/view-employee/:id\" component={ViewEmployeeComponent}></Route> \n              </Switch>\n          </div>  \n        <FooterComponent /> \n\n      </Router> \n    </ div >\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render( <\n  React.StrictMode >\n  <\n  App / >\n  <\n  /React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}